blueprint:
  name: Auto Lights Off After X Minutes
  description: Automatically turns off specified lights after they have been on for Z minutes or more
  domain: automation
  input:
    light_entities:
      name: Light Entities
      description: Select the lights that should be automatically turned off
      selector:
        entity:
          domain: light
          multiple: true
    timeout_duration:
      name: Timeout Duration
      description: How long lights can stay on before being automatically turned off (in minutes)
      default: 30
      selector:
        number:
          min: 1
          max: 120
          unit_of_measurement: "minutes"
          

variables:
  light_entities: !input light_entities
  timeout_minutes: !input timeout_duration


trigger:
  - platform: time_pattern
    minutes: "*"
    


condition: []

action:
  - repeat:
      for_each: "{{ light_entities }}"
      sequence:
        - variables:
            light_entity: "{{ repeat.item }}"
            current_time: "{{ now() }}"
            light_state: "{{ states(light_entity) }}"
            last_changed: "{{ states[light_entity].last_changed }}"
            time_diff_minutes: "{{ ((as_timestamp(current_time) - as_timestamp(last_changed))/ 60) | int }}"
        - condition: template
          value_template: "{{ light_state == 'on' and time_diff_minutes >= timeout_minutes }}"
        - service: light.turn_off
          target:
            entity_id: "{{ light_entity }}"
        - service: logbook.log
          data:
            name: "Auto Light Off"
            message: "Automatically turned off {{ state_attr(light_entity, 'friendly_name') or light_entity }} after {{ time_diff_minutes }} minutes"

mode: single
max_exceeded: silent
